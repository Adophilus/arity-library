plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  // id 'net.ltgt.apt' version '0.20'
	id 'java'
}

// apply plugin: 'net.ltgt.apt-eclipse'
apply plugin: 'java'

group = 'com.library'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'javax.validation:validation-api:2.0.1.Final'
  implementation 'org.hibernate:hibernate-validator:6.0.13.Final'

  implementation 'org.mapstruct:mapstruct:1.5.2.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
 
  implementation 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
  compileOnly 'org.projectlombok:lombok:1.18.24'

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'mysql:mysql-connector-java'

	developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.named('test') {
	// useJUnitPlatform()
}

tasks.register("sync"){
	inputs.files("./src/main/resources/static","./src/main/resources/templates",)
	doLast {
		sync {
			from("./src/main/resources/static")
			into("build/resources/main/static")
		}
		sync {
			from("./src/main/resources/templates")
			into("build/resources/main/templates")
		}

	}
}

compileJava {
    options.compilerArgs += [
        '-Amapstruct.suppressGeneratorTimestamp=true',
        '-Amapstruct.suppressGeneratorVersionInfoComment=true',
        '-Amapstruct.verbose=true'
    ]
}
